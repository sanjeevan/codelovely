<?php

/**
 * BasesfMessageOutbox
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $to_str
 * @property string $title
 * @property string $message
 * @property User $User
 * 
 * @method integer         getId()      Returns the current record's "id" value
 * @method integer         getUserId()  Returns the current record's "user_id" value
 * @method string          getToStr()   Returns the current record's "to_str" value
 * @method string          getTitle()   Returns the current record's "title" value
 * @method string          getMessage() Returns the current record's "message" value
 * @method User            getUser()    Returns the current record's "User" value
 * @method sfMessageOutbox setId()      Sets the current record's "id" value
 * @method sfMessageOutbox setUserId()  Sets the current record's "user_id" value
 * @method sfMessageOutbox setToStr()   Sets the current record's "to_str" value
 * @method sfMessageOutbox setTitle()   Sets the current record's "title" value
 * @method sfMessageOutbox setMessage() Sets the current record's "message" value
 * @method sfMessageOutbox setUser()    Sets the current record's "User" value
 * 
 * @package    socialhub
 * @subpackage model
 * @author     Sanjeevan Ambalavanar
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasesfMessageOutbox extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_message_outbox');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('to_str', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}