<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $thing_id
 * @property integer $user_id
 * @property integer $article_id
 * @property integer $reply_id
 * @property integer $reply_depth
 * @property string $content
 * @property string $content_html
 * @property User $User
 * @property Article $Article
 * @property Thing $Thing
 * 
 * @method integer getId()           Returns the current record's "id" value
 * @method integer getThingId()      Returns the current record's "thing_id" value
 * @method integer getUserId()       Returns the current record's "user_id" value
 * @method integer getArticleId()    Returns the current record's "article_id" value
 * @method integer getReplyId()      Returns the current record's "reply_id" value
 * @method integer getReplyDepth()   Returns the current record's "reply_depth" value
 * @method string  getContent()      Returns the current record's "content" value
 * @method string  getContentHtml()  Returns the current record's "content_html" value
 * @method User    getUser()         Returns the current record's "User" value
 * @method Article getArticle()      Returns the current record's "Article" value
 * @method Thing   getThing()        Returns the current record's "Thing" value
 * @method Comment setId()           Sets the current record's "id" value
 * @method Comment setThingId()      Sets the current record's "thing_id" value
 * @method Comment setUserId()       Sets the current record's "user_id" value
 * @method Comment setArticleId()    Sets the current record's "article_id" value
 * @method Comment setReplyId()      Sets the current record's "reply_id" value
 * @method Comment setReplyDepth()   Sets the current record's "reply_depth" value
 * @method Comment setContent()      Sets the current record's "content" value
 * @method Comment setContentHtml()  Sets the current record's "content_html" value
 * @method Comment setUser()         Sets the current record's "User" value
 * @method Comment setArticle()      Sets the current record's "Article" value
 * @method Comment setThing()        Sets the current record's "Thing" value
 * 
 * @package    socialhub
 * @subpackage model
 * @author     Sanjeevan Ambalavanar
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('thing_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('article_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('reply_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('reply_depth', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('content_html', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id'));

        $this->hasOne('Thing', array(
             'local' => 'thing_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}