<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $email
 * @property string $firstname
 * @property string $lastname
 * @property string $password
 * @property string $salt
 * @property boolean $is_admin
 * @property timestamp $last_login
 * @property Doctrine_Collection $sfMessageInbox
 * @property Doctrine_Collection $sfMessageOutbox
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $Vote
 * @property Doctrine_Collection $Comment
 * @property Doctrine_Collection $UserToAvatars
 * @property Doctrine_Collection $BlogEntry
 * @property Doctrine_Collection $Invite
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getUsername()        Returns the current record's "username" value
 * @method string              getEmail()           Returns the current record's "email" value
 * @method string              getFirstname()       Returns the current record's "firstname" value
 * @method string              getLastname()        Returns the current record's "lastname" value
 * @method string              getPassword()        Returns the current record's "password" value
 * @method string              getSalt()            Returns the current record's "salt" value
 * @method boolean             getIsAdmin()         Returns the current record's "is_admin" value
 * @method timestamp           getLastLogin()       Returns the current record's "last_login" value
 * @method Doctrine_Collection getSfMessageInbox()  Returns the current record's "sfMessageInbox" collection
 * @method Doctrine_Collection getSfMessageOutbox() Returns the current record's "sfMessageOutbox" collection
 * @method Doctrine_Collection getArticle()         Returns the current record's "Article" collection
 * @method Doctrine_Collection getVote()            Returns the current record's "Vote" collection
 * @method Doctrine_Collection getComment()         Returns the current record's "Comment" collection
 * @method Doctrine_Collection getUserToAvatars()   Returns the current record's "UserToAvatars" collection
 * @method Doctrine_Collection getBlogEntry()       Returns the current record's "BlogEntry" collection
 * @method Doctrine_Collection getInvite()          Returns the current record's "Invite" collection
 * @method User                setId()              Sets the current record's "id" value
 * @method User                setUsername()        Sets the current record's "username" value
 * @method User                setEmail()           Sets the current record's "email" value
 * @method User                setFirstname()       Sets the current record's "firstname" value
 * @method User                setLastname()        Sets the current record's "lastname" value
 * @method User                setPassword()        Sets the current record's "password" value
 * @method User                setSalt()            Sets the current record's "salt" value
 * @method User                setIsAdmin()         Sets the current record's "is_admin" value
 * @method User                setLastLogin()       Sets the current record's "last_login" value
 * @method User                setSfMessageInbox()  Sets the current record's "sfMessageInbox" collection
 * @method User                setSfMessageOutbox() Sets the current record's "sfMessageOutbox" collection
 * @method User                setArticle()         Sets the current record's "Article" collection
 * @method User                setVote()            Sets the current record's "Vote" collection
 * @method User                setComment()         Sets the current record's "Comment" collection
 * @method User                setUserToAvatars()   Sets the current record's "UserToAvatars" collection
 * @method User                setBlogEntry()       Sets the current record's "BlogEntry" collection
 * @method User                setInvite()          Sets the current record's "Invite" collection
 * 
 * @package    socialhub
 * @subpackage model
 * @author     Sanjeevan Ambalavanar
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('username', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('firstname', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('lastname', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('salt', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_admin', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfMessageInbox', array(
             'local' => 'id',
             'foreign' => 'from_id'));

        $this->hasMany('sfMessageOutbox', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Article', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Vote', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserToAvatar as UserToAvatars', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('BlogEntry', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Invite', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}