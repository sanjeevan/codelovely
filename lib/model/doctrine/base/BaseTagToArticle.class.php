<?php

/**
 * BaseTagToArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $tag_id
 * @property integer $article_id
 * @property Tag $Tag
 * @property Article $Article
 * 
 * @method integer      getId()         Returns the current record's "id" value
 * @method integer      getTagId()      Returns the current record's "tag_id" value
 * @method integer      getArticleId()  Returns the current record's "article_id" value
 * @method Tag          getTag()        Returns the current record's "Tag" value
 * @method Article      getArticle()    Returns the current record's "Article" value
 * @method TagToArticle setId()         Sets the current record's "id" value
 * @method TagToArticle setTagId()      Sets the current record's "tag_id" value
 * @method TagToArticle setArticleId()  Sets the current record's "article_id" value
 * @method TagToArticle setTag()        Sets the current record's "Tag" value
 * @method TagToArticle setArticle()    Sets the current record's "Article" value
 * 
 * @package    socialhub
 * @subpackage model
 * @author     Sanjeevan Ambalavanar
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTagToArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag_to_article');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('tag_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('article_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));


        $this->index('article_to_tag_index', array(
             'fields' => 
             array(
              0 => 'tag_id',
              1 => 'article_id',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Tag', array(
             'local' => 'tag_id',
             'foreign' => 'id'));

        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}