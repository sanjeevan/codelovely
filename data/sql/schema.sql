CREATE TABLE article (id INT AUTO_INCREMENT, user_id INT, thing_id INT, username VARCHAR(255), title VARCHAR(255), url VARCHAR(255), summary TEXT, fulldescription TEXT, code TEXT, code_language VARCHAR(20), question TEXT, total_comments INT, has_thumbnails TINYINT(1) DEFAULT '0', flavour VARCHAR(255) DEFAULT 'link', published TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX sluggable_idx (slug), INDEX user_id_idx (user_id), INDEX thing_id_idx (thing_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_entry (id INT AUTO_INCREMENT, user_id INT, title VARCHAR(255), summary TEXT, summary_html TEXT, body TEXT, body_html TEXT, status VARCHAR(15), published_at DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX sluggable_idx (slug), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment (id INT AUTO_INCREMENT, thing_id INT, user_id INT, article_id INT, reply_id INT, reply_depth INT, content TEXT, content_html TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX article_id_idx (article_id), INDEX thing_id_idx (thing_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE file (id INT AUTO_INCREMENT, filename VARCHAR(255), filesize BIGINT, extension VARCHAR(25), mimetype VARCHAR(255), location VARCHAR(255), meta_width INT, meta_height INT, hash VARCHAR(32), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE file_to_article (id INT AUTO_INCREMENT, file_id INT, article_id INT, is_published TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX file_id_idx (file_id), INDEX article_id_idx (article_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE invite (id BIGINT AUTO_INCREMENT, code VARCHAR(100), user_id INT, status VARCHAR(255) DEFAULT 'unused', sent_at DATETIME, sent_to VARCHAR(255), invited_user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE invite_request (id BIGINT AUTO_INCREMENT, email VARCHAR(100), url VARCHAR(100), firstname VARCHAR(50), lastname VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE thing (id INT AUTO_INCREMENT, hot DECIMAL(15, 7), ups INT, downs INT, score INT, is_published TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user (id INT AUTO_INCREMENT, username VARCHAR(30), email VARCHAR(255), firstname VARCHAR(50), lastname VARCHAR(50), password VARCHAR(255), salt VARCHAR(255), is_admin TINYINT(1), last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_to_avatar (id INT AUTO_INCREMENT, is_default TINYINT(1), user_id INT, file_id INT, INDEX user_id_idx (user_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE vote (id INT AUTO_INCREMENT, thing_id INT, user_id INT, type VARCHAR(4), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX thing_id_idx (thing_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_message_inbox (id INT AUTO_INCREMENT, user_id INT, from_id INT, to_str VARCHAR(255), title VARCHAR(255), message TEXT, is_read TINYINT(1), last_accessed DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX from_id_idx (from_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_message_outbox (id INT AUTO_INCREMENT, user_id INT, to_str VARCHAR(255), title VARCHAR(255), message TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE article ADD CONSTRAINT article_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE article ADD CONSTRAINT article_thing_id_thing_id FOREIGN KEY (thing_id) REFERENCES thing(id);
ALTER TABLE blog_entry ADD CONSTRAINT blog_entry_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE comment ADD CONSTRAINT comment_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE comment ADD CONSTRAINT comment_thing_id_thing_id FOREIGN KEY (thing_id) REFERENCES thing(id);
ALTER TABLE comment ADD CONSTRAINT comment_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id);
ALTER TABLE file_to_article ADD CONSTRAINT file_to_article_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE file_to_article ADD CONSTRAINT file_to_article_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id);
ALTER TABLE invite ADD CONSTRAINT invite_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE user_to_avatar ADD CONSTRAINT user_to_avatar_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE user_to_avatar ADD CONSTRAINT user_to_avatar_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE vote ADD CONSTRAINT vote_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE vote ADD CONSTRAINT vote_thing_id_thing_id FOREIGN KEY (thing_id) REFERENCES thing(id);
ALTER TABLE sf_message_inbox ADD CONSTRAINT sf_message_inbox_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE sf_message_inbox ADD CONSTRAINT sf_message_inbox_from_id_user_id FOREIGN KEY (from_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE sf_message_outbox ADD CONSTRAINT sf_message_outbox_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
